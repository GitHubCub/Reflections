Using a remote repository can be useful if you want to access your files from another machine/location
It can also be useful if you want to share your files with other people for collaboration
or "publish" them for other people to use/review

You might want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository
because if you're collaborating with others or letting any public member add to your repository,
you might not always want to add thier changes into your repository
e.g. if 1000 people made a 1000 branches (one each) and Git auto-saved everything onto your local machine, that would be a lot of data

The differences between forks, clones, and branches are:
F: is exculsive to clonging repositorys on GitHub; you'd use it to clone a repository and keep a link with the original 
C: a clone creates an identical repository, you either clone from GitHub to your local machine or perhaps from your local machine to your local machine;
you would clone a repository when you want to edit it on your machine
B: a branch exists only within one repository, it is a sequence of commits, linked by a parent relationship
(or in the case of a branch formed by a merge, it is a sequence of commits mad ein chronological order where each change can be tracked from a previous commit)

The benefit of having a copy of the last known state of the remote stored locally is
that you can always check which changes you've made locally since last syncing with the remote
and you can maintain the remote commits as a separate branch until you're ready to merge them to yours

Without using GitHub, collaborationg would occur by either sending files manually and using phone/instant messenger/email to discuss
or by using a sharepoint or dropbox or similar
sending files manually would definitely be harder than using GitHub or another alternative because this could take a long time to do
and you might get bogged down in versions and changes, without a tracker software helping you